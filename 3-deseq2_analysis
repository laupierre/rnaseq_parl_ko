## summarize length (min and max lengths) of transcripts by Gene

gtf <- rtracklayer::import("gencode.vM32.primary_assembly.annotation.gtf")
gtf_df <- as.data.frame(gtf)
gtf_df <- gtf_df[gtf_df$type == "transcript", ]
gtf_df <- unique (gtf_df[ ,c("gene_id", "transcript_id")])

# the length was pre-calculated using the 2-transcripts_length code
mylength <- read.delim ("transcript_length.csv", sep="")
gtf_df <- merge (gtf_df, mylength, by="transcript_id")


library (dplyr)

mylength <- gtf_df %>% group_by (gene_id) %>% summarize (minLength = min(Length), maxLength = max(Length))
dim (mylength)
# 57010     3



## Gene annotation
# See https://github.com/laupierre/RNA-Seq_mouse_pipeline/blob/main/gene_annotation.R

annot <- read.delim ("gencode.vM32.annotation.txt")
length (unique (annot$gene_id))
# 56953

annot <- annot[ ,grep ("transcript_id", colnames (annot), invert=TRUE)]
annot <- annot[!duplicated (annot), ]
length (unique (annot$gene_id))
# 56953

annot <- merge (annot, mylength, by.x="gene_id", by.y="gene_id", all.x=TRUE, all.y=TRUE)

library(xlsx)

write.xlsx (annot, "parl_temp_annot.xlsx", rowNames=F)


## star/featurecounts results

counts <- read.delim ("parl_subread.counts.txt", row.names=1, skip=1)

annot <- counts[ ,c("gene_name", "gene_type")]
head (annot)

counts <- counts[ ,grep ("bam", colnames (counts))]
colnames (counts) <- gsub ("Aligned.out.bam", "", colnames (counts))
dim (counts)
# 57010


# brain tissue


